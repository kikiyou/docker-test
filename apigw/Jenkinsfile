
@NonCPS
def configParse(file) {
    def config = new groovy.util.ConfigSlurper().parse(new File(file).toURL())
}
// def version = 871


node("master") {
    git 'http://github.com/kikiyou/docker-test'

    file = "${WORKSPACE}/config.groovy"
    println "---${file}---"
    def config = configParse(file)
    def registry_server = config.registry_server
    def build_file = config.apigw.build_file
    def build_version = config.apigw.build_version
    def build_file_path = config.apigw.build_file_path
    def image_name = config.apigw.image_name
    config = null

    DOCKERFILE = """\
    FROM centos7.1-v1

    MAINTAINER moneky

    ENV version ${build_version}

    ADD Fonsview.APIGW_R1.0.0_${build_version}.tar.gz /tmp/
    RUN cd /tmp/Fonsview.APIGW_R1.0.0_${build_version} && sh install.sh

    ADD apigw/run.sh /
    ENTRYPOINT sh /run.sh

    EXPOSE 22 80
    """
    sh "pwd"
    sh "ls -l"
    
    stage('Preparation') { // for display purposes
      sh "ls -l"
    //   sh "wget -q http://monkey.rhel.cc:8000/Fonsview.APIGW_R1.0.0_743.tar.gz "
      sh "rsync -av \"${build_file_path}/${build_file}\" ."
   }

    docker.withRegistry(registry_server, 'docker-registry') {
    
        stage "build"

        writeFile file: "apigw/Dockerfile", text: DOCKERFILE, encoding: "UTF-8"
        def app = docker.build("${image_name}:latest","--file apigw/Dockerfile --tag ${image_name}:${build_version} .")

        stage "publish"
        app.push 'latest'
        app.push "${build_version}"
    }
}
